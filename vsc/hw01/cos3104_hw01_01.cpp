#include <iostream>
using namespace std;

int m = 100;
int n = 1024;

void f(int i) {
    int x[m*n]; //(int size = 4bytes)
    cout << "Count "<< i << " : " << m << "k : begin " << x << endl;
    f(i+1);
}

int main(){
    f(0);
    return 0;
}

/*
    result : 
    -   เรียกใช้ f(i) โดยฟังก์ชั่นเรียกใช้ซ้ำ (recursive) ได้ 5 รอบ แล้วโปรแกรมจบการทำงาน

    analyze :
    -   โปรแกรมเรียกใช้ฟังก์ชั่น f(i) โดยภายในฟังก์ชั่น มีคำสั่งจองพื้นที่ array int จำนวน 100k ช่อง
        จากนั้นฟังก์ชั่นเรียกใช้ซ้ำ อีก i+1 ครั้ง 
        ทำให้ฟังก์ชั่นใช้คำสั่งจองพื้นที่ array int อีกจำนวน 100k แล้วเรียกใช้ฟังก์ชั่นซ้ำอีกไปเรื่อย ๆ
        จนโปรแกรมเรียกใช้ซ้ำได้ 5 รอบ ก่อนจบการทำงาน

    -   รวมจำนวน array int ได้ 5*100k ช่อง (int size = 4bytes : 4*(5*100k) = 2,000kb ~ 2Mb)

    -   เนื่องจากคำสั่งจองพื้นที่ array int เป็นคำสั่งกำหนดตัวแปร local โดยใช้พื้นที่ stack
        สาเหตุที่โปรแกรมวนเรียกใช้งานฟังก์ชั่นได้เพียง 5 รอบ
        เพราะ lifetime ของ array int ที่มีการจองก่อนหน้ายังคงอยู่ ไม่ได้ถูกคืนพื้นที่ก่อนการเรียกใช้ฟังก์ชั่นซ้ำ
        ส่งผลให้พื้นที่ stack เต็ม โปรแกรมจึงจบการทำงาน
*/